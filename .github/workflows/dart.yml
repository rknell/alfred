# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart CI/CD

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        sdk: [ stable, beta ]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1.3
        with:
          sdk: ${{ matrix.sdk }}

      - name: Install dependencies
        run: dart pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: dart analyze

      - name: Run tests with coverage
        run: |
          dart pub global activate coverage
          dart test --coverage=coverage
          dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --packages=.packages --report-on=lib

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info

      - name: Verify no uncommitted formatting changes
        run: |
          dart format .
          git diff --exit-code

      - uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

  publish:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable
          
      - name: Install dependencies
        run: dart pub get
        
      - name: Publish to pub.dev
        run: dart pub publish --force
        env:
          PUB_ACCESS_TOKEN: ${{ secrets.PUB_ACCESS_TOKEN }}
          PUB_REFRESH_TOKEN: ${{ secrets.PUB_REFRESH_TOKEN }}
